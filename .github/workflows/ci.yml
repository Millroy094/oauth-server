name: Build OAuth Server Artefact
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'packages/frontend/**'
      - 'packages/backend/**'
permissions:
  contents: write
  id-token: write
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.semantic_release.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install pnpm
        run: |
          npm install -g pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Run Semantic Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_RELEASE_GITHUB_TOKEN }}
        run: |
          chmod +x ./scripts/update_version.sh
          ./scripts/update_version.sh
  unit-tests:
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      fail-fast: false
      matrix:
        component:
          - backend
          - frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - name: 'run ${{matrix.component}} unit tests'
        working-directory: './packages/${{matrix.component}}'
        run: |
          npm ci
          npm run test:unit
  build:
    name: Build & push docker image
    needs: [release, unit-tests]
    runs-on: ubuntu-latest
    environment: Production
    env:
      IMG_NAME: 'ghcr.io/${{ github.repository }}'
      VERSION: ${{ needs.release.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GHCR_PASSWORD }}
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=${{ github.sha }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
